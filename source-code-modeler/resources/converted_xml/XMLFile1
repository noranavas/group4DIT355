<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="C:\Users\gusnu\Desktop\group4DIT355\source-code-modeler\src\sourcecodemodeler\controller\Visualizer.java"><package>package <name><name>sourcecodemodeler</name><operator>.</operator><name>controller</name></name>;</package>

<import>import <name><name>javafx</name><operator>.</operator><name>application</name><operator>.</operator><name>Application</name></name>;</import>
<import>import <name><name>javafx</name><operator>.</operator><name>embed</name><operator>.</operator><name>swing</name><operator>.</operator><name>SwingFXUtils</name></name>;</import>
<import>import <name><name>javafx</name><operator>.</operator><name>scene</name><operator>.</operator><name>Scene</name></name>;</import>
<import>import <name><name>javafx</name><operator>.</operator><name>scene</name><operator>.</operator><name>image</name><operator>.</operator><name>Image</name></name>;</import>
<import>import <name><name>javafx</name><operator>.</operator><name>scene</name><operator>.</operator><name>image</name><operator>.</operator><name>ImageView</name></name>;</import>
<import>import <name><name>javafx</name><operator>.</operator><name>scene</name><operator>.</operator><name>layout</name><operator>.</operator><name>StackPane</name></name>;</import>
<import>import <name><name>javafx</name><operator>.</operator><name>stage</name><operator>.</operator><name>Stage</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>image</name><operator>.</operator><name>BufferedImage</name></name>;</import>

<class><specifier>public</specifier> class <name>Visualizer</name> <super><extends>extends <name>Application</name></extends></super> <block>{
    <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><name>Stage</name></type> <name>stage</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>BufferedImage</name></type> <name>diagram</name></decl>;</decl_stmt>

    <comment type="line">//===== Constructor(s) =====//</comment>
    <constructor><specifier>public</specifier> <name>Visualizer</name><parameter_list>(<parameter><decl><type><name>BufferedImage</name></type> <name>diagram</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>diagram</name></name> <operator>=</operator> <name>diagram</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>stage</name> <operator>=</operator> <operator>new</operator> <call><name>Stage</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="line">//===== Getters &amp; Setters =====//</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Stage</name></type> <name>getStage</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>stage</name></expr>;</return>
    }</block></function>
    <function><specifier>public</specifier> <type><name>BufferedImage</name></type> <name>getDiagram</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>diagram</name></expr>;</return>
    }</block></function>

    <comment type="line">//===== Methods =====//</comment>
    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>start</name><parameter_list>(<parameter><decl><type><name>Stage</name></type> <name>primaryStage</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><name>stage</name> <operator>=</operator> <name>primaryStage</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"In Visualiser.java"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>primaryStage</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><literal type="string">"Visualization"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>ImageView</name></type> <name>imageView</name> <init>= <expr><operator>new</operator> <call><name>ImageView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Image</name></type> <name>image</name> <init>= <expr><call><name><name>SwingFXUtils</name><operator>.</operator><name>toFXImage</name></name><argument_list>(<argument><expr><name>diagram</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>imageView</name><operator>.</operator><name>setImage</name></name><argument_list>(<argument><expr><name>image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>StackPane</name></type> <name>root</name> <init>= <expr><operator>new</operator> <call><name>StackPane</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>setStyle</name></name><argument_list>(<argument><expr><literal type="string">"-fx-background-color: #ffffff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>getChildren</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><name>imageView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>primaryStage</name><operator>.</operator><name>setScene</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Scene</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="number">900</literal></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>primaryStage</name><operator>.</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    }</block></function>

}</block></class></unit>
