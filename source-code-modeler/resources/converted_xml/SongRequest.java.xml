<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="C:\Users\Fabian\Desktop\Karaoke\src\com\teamtreehouse\model\SongRequest.java"><package>package <name><name>com</name><operator>.</operator><name>teamtreehouse</name><operator>.</operator><name>model</name></name>;</package>

<class><specifier>public</specifier> class <name>SongRequest</name> <block>{
    <decl_stmt><decl><specifier>private</specifier> <type><name>String</name></type> <name>mSingerName</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>Song</name></type> <name>mSong</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>SongRequest</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>SingerName</name></decl></parameter>, <parameter><decl><type><name>Song</name></type> <name>Song</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mSingerName</name></name> <operator>=</operator> <name>SingerName</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mSong</name></name> <operator>=</operator> <name>Song</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><specifier>public</specifier> <type><name>String</name></type> <name>getSingerName</name><parameter_list>()</parameter_list> <block>{<return>return <expr><name>mSingerName</name></expr>;</return>}</block></function>
    <function><specifier>public</specifier> <type><name>Song</name></type> <name>getSong</name><parameter_list>()</parameter_list> <block>{<return>return <expr><name>mSong</name></expr>;</return>}</block></function>

    <function><specifier>public</specifier> <type><name>void</name></type> <name>setSingerName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>mSingerName</name></decl></parameter>)</parameter_list> <block>{<expr_stmt><expr><name><name>this</name><operator>.</operator><name>mSingerName</name></name> <operator>=</operator> <name>mSingerName</name></expr>;</expr_stmt>}</block></function>
    <function><specifier>public</specifier> <type><name>void</name></type> <name>setSong</name><parameter_list>(<parameter><decl><type><name>Song</name></type> <name>mSong</name></decl></parameter>)</parameter_list> <block>{<expr_stmt><expr><name><name>this</name><operator>.</operator><name>mSong</name></name> <operator>=</operator> <name>mSong</name></expr>;</expr_stmt>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">true</literal></expr>;</return></block></then></if>
        <if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>

        <decl_stmt><decl><type><name>SongRequest</name></type> <name>that</name> <init>= <expr><operator>(</operator><name>SongRequest</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>

        <if>if <condition>(<expr><operator>!</operator><call><name><name>mSingerName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>that</name><operator>.</operator><name>mSingerName</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>
        <return>return <expr><call><name><name>mSong</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>that</name><operator>.</operator><name>mSong</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><call><name><name>mSingerName</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">31</literal> <operator>*</operator> <name>result</name> <operator>+</operator> <call><name><name>mSong</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>result</name></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><literal type="string">"SongRequest{"</literal> <operator>+</operator> <literal type="string">"mSingerName='"</literal> <operator>+</operator> <name>mSingerName</name> <operator>+</operator> <literal type="char">'\''</literal> <operator>+</operator> <literal type="string">", mSong="</literal> <operator>+</operator> <name>mSong</name> <operator>+</operator> <literal type="char">'}'</literal></expr>;</return>
    }</block></function>
}</block></class></unit>
