<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="C:\Users\Fabian\Desktop\giflib-master\src\main\java\com\teamtreehouse\giflib\data\CategoryRepository.java"><package>package <name><name>com</name><operator>.</operator><name>teamtreehouse</name><operator>.</operator><name>giflib</name><operator>.</operator><name>data</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>teamtreehouse</name><operator>.</operator><name>giflib</name><operator>.</operator><name>model</name><operator>.</operator><name>Category</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>stereotype</name><operator>.</operator><name>Component</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>stream</name><operator>.</operator><name>Collectors</name></name>;</import>

<class><annotation>@<name>Component</name></annotation>
<specifier>public</specifier> class <name>CategoryRepository</name> <block>{
    <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Category</name></argument>&gt;</argument_list></name></type> <name>ALL_CATEGORIES</name> <init>=<expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(
        <argument><expr><operator>new</operator> <call><name>Category</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="string">"Technology"</literal></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><operator>new</operator> <call><name>Category</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><literal type="string">"People"</literal></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><operator>new</operator> <call><name>Category</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>,<argument><expr><literal type="string">"Destruction"</literal></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr></init></decl>;</decl_stmt>

    <function><specifier>public</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Category</name></argument>&gt;</argument_list></name></type> <name>getAllCategories</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>ALL_CATEGORIES</name></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <type><name>Category</name></type> <name>findById</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>)</parameter_list> <block>{
        <for>for<control>(<init><decl><type><name>Category</name></type> <name>category</name> <range>: <expr><name>ALL_CATEGORIES</name></expr></range></decl></init>)</control> <block>{
            <if>if<condition>(<expr><call><name><name>category</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>id</name></expr>)</condition><then> <block>{
                <return>return <expr><name>category</name></expr>;</return>
            }</block></then></if>
        }</block></for>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
        <comment type="line">// OR return ALL_CATEGORIES.stream().filter(category -&gt; category.getId() == id).findFirst().get();</comment>
    }</block></function>
}</block></class>
</unit>
